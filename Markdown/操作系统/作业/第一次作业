# 201800800504樊昕昊

## 习题一

### 6.中断向量内的处理器状态字应当标明管态还是目态？为什么？

- 处理器状态字应标明为管态。该状态由系统初始化程序设置，这样来保证发生中断后对中断产生正确响应，转到对应的中断处理程序。

### 7.系统如何由目态转换为管态？如何由管态转换为目态？

- 系统从目态到管态通过**中断**实现（仅可通过中断实现），从管态转换为目态是通过**修改程序状态字**实现的。

### 11.为何无法确定用户堆栈段的长度？

1. 用户进程中子程序嵌套调用的深度无法提前确定
2. 子程序参数和局部变量的数量以及各个变量的类型无法提前确定
3. 动态变量使用，在程序运行前无法确定
4. 以上几点共同影响用户堆栈段的长度
5. 举个例子，许多程序需要根据用户的输入参数来运行，用户的输入参数会影响递归深度，动态内存分配申请的次数，所以无法确定用户堆栈段的长度。

### 13.何为并行？何为并发？在单处理器系统中，下述并行和并发现象哪些可能发生，哪些不会发生？

> - 并行：无论宏观还是微观，计算机都可以同时运行多个程序，同时向前推进，多道程序在同一时刻执行，需要多个硬件支持。
> - 并发：计算机系统同时存在多道运行的程序，宏观上多道程序在同时向前推进，微观上任何一个时刻都只有一道程序在运行，多个进程轮流拥有处理器。
>
> 1. 进程与进程之间的并行
>     - 不会发生。进程的执行需要占有处理器，单处理器只能支持程序并发执行。
> 2. 进程与进程之间的并发
>     - 可能发生。
> 3. 处理器与设备之间的并行
>     - 可能发生。处理机在运行时，外部设备（如打印机）可以进行其他工作。
> 4. 处理器与通道之间的并行
>     - 可能发生。通道是用来把数据从外部I/O设备读入内存中，在读取时和处理器无冲突。
> 5. 通道与通道之间的并行
>     - 可能发生。可以同时有多个I/O设备通过多个通道向内存输入信息。
> 6. 设备与设备之间的并行
>     - 可能发生。如打印机打印文档，磁带机输入数据。



## 习题二

### 1.为何引入多道程序设计？在多道程序系统中，内存中作业的道数是否越多越好？请说明原因。

- 因为多道程序设计相比于单道程序设计有**处理机利用率高、内存利用率高、设备利用率高**的优点。
- 作业道数**并不是越多越好**。道数过多，系统开销会变高，各个程序对处理机资源竞争激烈，程序响应速度下降，单个程序总执行时间变长；道数过少，系统资源利用率会过低。同时，程序道数也会受到内存容量和物理设备数量的制约。

### 5.什么是进程上下文？进程上下文包括哪些成分？哪些成分对目态程序是可见的？

- 进程上下文为进程的物理实体（PCB+程序（操作集+数据集））和支持进程运行的物理环境。

- 进程上下文包括三个部分：

    > 1. 用户级上下文：由用户进程的程序块、用户数据块和用户堆栈组成的进程地址空间。
    > 2. 系统级上下文：包括进程控制块、内存管理信息、进程环境块、以及系统堆栈等组成的进程地址空间。
    > 3. 寄存器上下文：由程序状态字寄存器、各类控制寄存器、地址寄存器、通用寄存器、用户堆栈指针等组成。

- 用户级上下文和部分寄存器上下文对用户可见。

### 10.什么是线程？图示进程与线程之间的关系。

- 线程是进程内一个相对独立的执行流。
    ![https://raw.githubusercontent.com/FANSENG/Figure-bed/master/Picture/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%85%B3%E7%B3%BB.PNG](https://raw.githubusercontent.com/FANSENG/Figure-bed/master/Picture/操作系统/线程与进程的关系.PNG)

### 13.同一进程中的多个线程有哪些成分是共用的，哪些成分是私用的？

- 堆、数据和程序代码是公用的；线程控制块、寄存器和用户栈是私用的。

